Text file for testing Module 2-matrix_divided.py
===============================================
Using ``matrix_divided``
-----------------------
First import the function 
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

1 - Successful Tests expected:
	>>> matrix = [[3, 6, 9], [12, 15, 18]]
	>>> matrix_divided(matrix, 3)
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

	>>> matrix = [[12.7, 15.9, 23.5], [25.4, 3.5, 12.0]]
	>>> matrix_divided(matrix, 2)
	[[6.35, 7.95, 11.75], [12.7, 1.75, 6.0]]

	>>> matrix_divided(matrix, 3.5)
	[[3.63, 4.54, 6.71], [7.26, 1.0, 3.43]]

	>>> matrix = [[30, 20, 10], [10, 5, 1]]
	>>> matrix_divided(matrix, -5)
	[[-6.0, -4.0, -2.0], [-2.0, -1.0, -0.2]]

	>>> matrix = [[10, 15, 20], [20, 25, 26]]
	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Errors expected
---------------

	# case matrix of different row size
	>>> matrix = [[1, 2], [1, 2, 3]]
	>>> matrix_divided(matrix, 1) 
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

	# case div is not a number
	>>> matrix = [[30, 20, 10], [10, 5, 1]]
	>>> matrix_divided(matrix, "chong")
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	# case div is zero
	>>> matrix = [[30, 20, 10], [10, 5, 1]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

	# case matrix with wrong type of data
	>>> matrix = [["long", None, "tchong"], [None, "Alicia", "Banana"]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	# case empty matrix
	>>> matrix_divided(None, div=1)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	# case no divisor provided
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
	
	